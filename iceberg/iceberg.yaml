version: '3.8'

services:
  hive-metastore-db:
    image: postgres:latest
    container_name: hive-metastore-db
    hostname: hive-metastore-db
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hiveuser
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - iceberg-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hiveuser -d metastore"]
      interval: 5s
      timeout: 5s
      retries: 5

  hive-metastore:
    image: apache/hive:4.0.0
    container_name: hive-metastore
    hostname: hive-metastore
    depends_on:
      hive-metastore-db:
        condition: service_healthy
    environment:
      DB_DRIVER: postgres
      SERVICE_NAME: metastore
      HIVE_METASTORE_DB_TYPE: postgres
      HIVE_METASTORE_DB_HOST: hive-metastore-db
      HIVE_METASTORE_DB_PORT: 5432
      HIVE_METASTORE_DB_USER: hiveuser
      HIVE_METASTORE_DB_PASSWORD: password
    ports:
      - "9083:9083"
    volumes:
      - warehouse:/opt/hive/data/warehouse
      - ./hive/conf/hive-site.xml:/opt/hive/conf/hive-site.xml:ro
      - ./lib/postgresql-42.7.3.jar:/opt/hive/lib/postgresql-42.7.3.jar:ro
      - ./trino/lib/hadoop-aws-3.3.6.jar:/opt/hive/lib/hadoop-aws-3.3.6.jar:ro
      - ./trino/lib/aws-java-sdk-bundle-1.12.490.jar:/opt/hive/lib/aws-java-sdk-bundle-1.12.490.jar:ro
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9083"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - iceberg-net
    command: >
        bash -c "/opt/hive/bin/hive --service metastore"
      

  minio:
    image: minio/minio
    container_name: minio
    hostname: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9100:9000"
      - "9101:9001"
    networks:
      - iceberg-net
    volumes:
      - miniodata:/data

  trino:
    image: trinodb/trino:476
    container_name: trino
    hostname: trino
    depends_on:
      - hive-metastore
      - minio
    ports:
      - "8080:8080"
    networks:
      - iceberg-net
    volumes:
      - ./trino/catalog:/etc/trino/catalog
      - ./trino/configs:/usr/lib/trino/etc:ro
 

  minio-setup:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    hostname: mc
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - miniodata:/mnt/data
    networks:
      - iceberg-net
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin); do
        echo '...waiting for MinIO...' && sleep 1;
      done;

      # Create bucket only if it doesn't exist
      if ! /usr/bin/mc ls minio/bitcoin-ingest >/dev/null 2>&1; then
        /usr/bin/mc mb minio/bitcoin-ingest;
        /usr/bin/mc anonymous set public minio/bitcoin-ingest;
      else
        echo 'Bucket bitcoin-ingest already exists';
      fi

      exit 0;
      "   
    
  python-test:
    image: python:3.11-slim
    hostname: python-test
    container_name: python-test
    depends_on:
      hive-metastore:
        condition: service_healthy
    volumes:
      - ./test-instance/scripts:/scripts
    networks:
      - iceberg-net
    working_dir: /scripts
    command: bash -c "pip install --no-cache-dir -r requirements.txt; python test_minio.py; python test_hive_metastore.py"

  iceberg-init:
    image: python:3.11-slim
    hostname: iceberg-init
    container_name: iceberg-init
    depends_on:
      hive-metastore:
        condition: service_healthy
    volumes:
      - ./init-instance/scripts:/scripts
    networks:
      - iceberg-net
    working_dir: /scripts
    command: bash -c "pip install --no-cache-dir -r requirements.txt; python init_iceberg_tables_mempool.py"
  

volumes:
  warehouse:
  pgdata:
  miniodata:
    driver: local


networks:
  iceberg-net:
    external: true

